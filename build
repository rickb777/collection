#!/bin/bash -e
cd $(dirname $BASH_SOURCE)
BASE=$PWD

FIRST=$(go env GOPATH | cut -d: -f1)
PATH=$FIRST/bin:$PATH
RVSN=v3.5.4

function getVersionedTool
{
  if [ ! -x $FIRST/bin/$2-$3 ]; then
    echo go get $1@$3
    go get $1@$3
    cd $FIRST/bin
    cp -v $2 $2-$3
    cd -
  fi
}

getVersionedTool github.com/rickb777/runtemplate/v3 runtemplate $RVSN

core="Stringer:true Comparable:true"
int="Ordered:true Numeric:true"
enc="GobEncode:true JsonEncode:true"

function generateGroup
{
    cd $1

    runtemplate-$RVSN -f -v -tpl $2/collection.tpl $3  Type=string ToSet:true  $core           MapTo:int
    runtemplate-$RVSN -f -v -tpl $2/collection.tpl $3  Type=int    ToSet:true  $core $enc $int MapTo:string
    runtemplate-$RVSN -f -v -tpl $2/collection.tpl $3  Type=uint   ToSet:true  $core $enc $int MapTo:string
    runtemplate-$RVSN -f -v -tpl $2/collection.tpl $3  Type=int64  ToSet:true  $core $enc $int MapTo:string
    runtemplate-$RVSN -f -v -tpl $2/collection.tpl $3  Type=uint64 ToSet:true  $core $enc $int MapTo:string
    runtemplate-$RVSN -f -v -tpl $2/collection.tpl $3 'Type=interface{}/Any/nil' ToSet:true

    runtemplate-$RVSN -f -v -tpl $2/list.tpl       $3  Type=string ToSet:true  $core $enc      MapTo:int
    runtemplate-$RVSN -f -v -tpl $2/list.tpl       $3  Type=int    ToSet:true  $core $enc $int MapTo:string
    runtemplate-$RVSN -f -v -tpl $2/list.tpl       $3  Type=uint   ToSet:true  $core $enc $int MapTo:string
    runtemplate-$RVSN -f -v -tpl $2/list.tpl       $3  Type=int64  ToSet:true  $core $enc $int MapTo:string
    runtemplate-$RVSN -f -v -tpl $2/list.tpl       $3  Type=uint64 ToSet:true  $core $enc $int MapTo:string
    runtemplate-$RVSN -f -v -tpl $2/list.tpl       $3 'Type=interface{}/Any/nil' ToSet:true

    runtemplate-$RVSN -f -v -tpl $2/set.tpl        $3  Type=string ToList:true $core $enc      MapTo:int
    runtemplate-$RVSN -f -v -tpl $2/set.tpl        $3  Type=int    ToList:true $core $enc $int MapTo:string
    runtemplate-$RVSN -f -v -tpl $2/set.tpl        $3  Type=uint   ToList:true $core $enc $int MapTo:string
    runtemplate-$RVSN -f -v -tpl $2/set.tpl        $3  Type=int64  ToList:true $core $enc $int MapTo:string
    runtemplate-$RVSN -f -v -tpl $2/set.tpl        $3  Type=uint64 ToList:true $core $enc $int MapTo:string
    runtemplate-$RVSN -f -v -tpl $2/set.tpl        $3 'Type=interface{}/Any/nil' ToList:true

    runtemplate-$RVSN -f -v -tpl $2/map.tpl        $3  Key=string  Type=string $core $enc
    runtemplate-$RVSN -f -v -tpl $2/map.tpl        $3  Key=string  Type=int    $core $enc
    runtemplate-$RVSN -f -v -tpl $2/map.tpl        $3  Key=string  Type=uint   $core $enc
    runtemplate-$RVSN -f -v -tpl $2/map.tpl        $3  Key=string 'Type=interface{}/Any/nil'

    runtemplate-$RVSN -f -v -tpl $2/map.tpl        $3  Key=int     Type=string $core $enc
    runtemplate-$RVSN -f -v -tpl $2/map.tpl        $3  Key=uint    Type=string $core $enc
    runtemplate-$RVSN -f -v -tpl $2/map.tpl        $3  Key=int64   Type=string $core $enc
    runtemplate-$RVSN -f -v -tpl $2/map.tpl        $3  Key=uint64  Type=string $core $enc

    runtemplate-$RVSN -f -v -tpl $2/map.tpl        $3  Key=int     Type=int    $core $enc $int
    runtemplate-$RVSN -f -v -tpl $2/map.tpl        $3  Key=uint    Type=uint   $core $enc $int
    runtemplate-$RVSN -f -v -tpl $2/map.tpl        $3  Key=int64   Type=int64  $core $enc $int
    runtemplate-$RVSN -f -v -tpl $2/map.tpl        $3  Key=uint64  Type=uint64 $core $enc $int

    cd $BASE
}

for d in . immutable; do
  rm -f $d/*_collection.go $d/*_list.go $d/*_map.go $d/*_set.go
done

generateGroup .         simple
generateGroup immutable immutable
generateGroup .         threadsafe Prefix=Shared

#runtemplate-$RVSN -tpl types/stringy.tpl         Prefix=X1 Type=Email SortableSlice:true
#runtemplate-$RVSN -tpl plumbing/plumbing.tpl     Prefix=X1 Type=Apple
#runtemplate-$RVSN -tpl plumbing/mapTo.tpl        Prefix=X1 Type=Apple ToPrefix=X1 ToType=Pear

gofmt -l -w *.go immutable/*.go
go test ./...
